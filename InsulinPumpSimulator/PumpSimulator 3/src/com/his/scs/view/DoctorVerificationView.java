package com.his.scs.view;

import java.awt.event.ActionEvent;

import javax.swing.JOptionPane;
import javax.swing.JPasswordField;

import com.his.scs.controller.DoctorHomeController;
import com.his.scs.model.DoctorHomeModel;
import com.his.scs.model.DoctorVerificationModel;

public class DoctorVerificationView extends javax.swing.JFrame {

	/**
	 * Creates new form DoctorVerificationView
	 */
	public DoctorVerificationView() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">                          
	private void initComponents() {
		this.setBounds(100, 100, 100, 100);
		this.setTitle("Insulin / Glucagon Pump");
		jPanel1 = new javax.swing.JPanel();
		username_label = new javax.swing.JLabel();
		password_label = new javax.swing.JLabel();
		username_field = new javax.swing.JTextField();
		password_field = new javax.swing.JPasswordField();
		selectOk_btn = new javax.swing.JButton();
		selectCancel_btn = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.HIDE_ON_CLOSE);

		jPanel1.setBackground(new java.awt.Color(213, 234, 244));
		jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Confirm Password", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14))); // NOI18N

		username_label.setText("Username:");

		password_label.setText("Password:");

		username_field.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jTextField1ActionPerformed(evt);
			}
		});

		password_field.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jPasswordField1ActionPerformed(evt);
			}
		});

		selectOk_btn.setText("OK");
		selectOk_btn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});

		selectCancel_btn.setText("Cancel");

		selectCancel_btn.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton2ActionPerformed(evt);
			}
		});

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(
				jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup()
						.addContainerGap()
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addComponent(username_label, javax.swing.GroupLayout.Alignment.TRAILING)
								.addComponent(password_label, javax.swing.GroupLayout.Alignment.TRAILING))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(jPanel1Layout.createSequentialGroup()
										.addGap(0, 24, Short.MAX_VALUE)
										.addComponent(selectOk_btn)
										.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
										.addComponent(selectCancel_btn))
								.addGroup(jPanel1Layout.createSequentialGroup()
										.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
												.addComponent(password_field, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE)
												.addComponent(username_field))
										.addGap(0, 0, Short.MAX_VALUE)))
						.addContainerGap())
				);

		jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {selectOk_btn, selectCancel_btn});

		jPanel1Layout.setVerticalGroup(
				jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup()
						.addGap(33, 33, 33)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(username_label)
								.addComponent(username_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(22, 22, 22)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(password_label)
								.addComponent(password_field, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(selectOk_btn)
								.addComponent(selectCancel_btn))
						.addContainerGap())
				);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup()
						.addGap(47, 47, 47)
						.addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addContainerGap(39, Short.MAX_VALUE))
				);
		layout.setVerticalGroup(
				layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
						.addContainerGap(40, Short.MAX_VALUE)
						.addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(38, 38, 38))
				);

		pack();
	}// </editor-fold>                        

	protected void jButton2ActionPerformed(ActionEvent evt) {
		// TODO Auto-generated method stub
		this.dispose();

		HomeFrame theView = new HomeFrame();
		theView.setVisible(true);

	}

	private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {                                            
		// TODO add your handling code here:
	}                                           

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
		// TODO add your handling code here:
		DoctorVerificationModel docVerModel = new DoctorVerificationModel();
		if(isValidUser()) {
			DoctorHomeView theView = new DoctorHomeView();
			DoctorHomeModel theModel = new DoctorHomeModel();

			DoctorHomeController theController = new DoctorHomeController(theView, theModel);
			theView.setVisible(true);
		}
		else {
			this.setVisible(true);
		}


	}                                        


	private void jPasswordField1ActionPerformed(java.awt.event.ActionEvent evt) {                                                
		// TODO add your handling code here:
		JPasswordField field = (JPasswordField) evt.getSource();
		char[] password = field.getPassword();
	}                                               

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		//<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
		/* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(DoctorVerificationView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(DoctorVerificationView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(DoctorVerificationView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(DoctorVerificationView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		//</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new DoctorVerificationView().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify                     
	private javax.swing.JButton selectOk_btn;
	private javax.swing.JButton selectCancel_btn;
	private javax.swing.JLabel username_label;
	private javax.swing.JLabel password_label;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPasswordField password_field;
	private javax.swing.JTextField username_field;
	private javax.swing.JTextField jTextField2;

	private char[] password;
	private String username;
	private boolean validUser;
	// End of variables declaration 

	// Getter Setter Methods
	public char[] getPassword_field() {
		password = password_field.getPassword();
		return password;
	}

	public void setPassword_field(javax.swing.JPasswordField password_field) {
		this.password_field = password_field;
	}

	public String getUsername_field() {
		username = username_field.getText();
		return username;
	}

	public void setUsername_field(javax.swing.JTextField username_field) {
		this.username_field = username_field;
	}

	public boolean isValidUser() {
		return validUser;
	}

	public void setValidUser(boolean validUser) {
		this.validUser = validUser;
	}
	// END - Getter Setter Methods



	public void verifyUserListener(java.awt.event.ActionListener listenForOkButton) {
		selectOk_btn.addActionListener(listenForOkButton);
	}

	public void displayErrorMessage(String errorMessage) {
		JOptionPane.showMessageDialog(this, errorMessage);
	}

	public void displaySuccessMessage(String successMessage) {
		JOptionPane.showMessageDialog(this, successMessage);
	}

}
